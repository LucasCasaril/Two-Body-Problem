dataSet = np.array([X1, Y1, Z1])
print('dataSet = ', dataSet)
numPoints = len(X1)
print('numPoints = ', numPoints)

def animation_function(num):

    ax.clear()
    # Updating trajectory line
    ax.plot3D(dataSet[0,:num+1], dataSet[1,:num+1], dataSet[2, :num+1], c='blue')

    # Updating Point Location
    ax.scatter(dataSet[0, num], dataSet[1, num], dataSet[2, num], c='blue', marker='o')

    # Adding Constant Origin
    ax.plot3D(dataSet[0, 0], dataSet[1, 0], dataSet[2, 0],c='black', marker='o')

    # Setting Axes Limits
    #ax.set_xlim3d([-1, 1])
    #ax.set_ylim3d([-1, 1])
    #ax.set_zlim3d([0, 100])

    # Adding Figure Labels
    #ax.set_title('Trajectory \nTime = ' + str(np.round(t[num], decimals=2)) + ' sec')
    #ax.set_xlabel('x')
    #ax.set_ylabel('y')
    #ax.set_zlabel('z')

# Plotting the animation
fig = plt.figure()
ax = plt.axes(projection='3d')
line_ani = animation.FuncAnimation(fig, animation_function(0), interval=numPoints, frames=numPoints)
plt.show()
